upstream frontend {
    server unitydofrontendcon:80;
}
upstream backend {
    server unitydobackendcon:8080 ;
}

server {
    listen 443 ssl;
    server_name  capstone23.sit.kmutt.ac.th;             #domain name

    # Add ssl
    ssl on;        #If you force HTTP access, this line should be opened
    ssl_certificate /etc/ssl/www-nk2.crt;   #The crt file storage path of nginx for ssl certificate of domain name application
    ssl_certificate_key /etc/ssl/www-nk2.key;      #Storage path of nginx key file of ssl certificate for domain name application

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

     # Specify the password as a format supported by openssl
     ssl_protocols  SSLv2 SSLv3 TLSv1.2;

     ssl_ciphers  HIGH:!aNULL:!MD5;  # Password encryption method
     ssl_prefer_server_ciphers  on;   # Server passwords that rely on SSLv3 and TLSv1 protocols will take precedence over client passwords


    location / {
        proxy_pass http://frontend;
    }

    location /api {
        proxy_pass http://backend;
        proxy_redirect off;
        rewrite ^/(.*) /$1 break;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Authorization $http_authorization;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
    }

    error_page   500 502 503 504  /50x.html;    
        location = /50x.html {        
            root   /usr/share/nginx/html;    
        }
    

    client_max_body_size 100M;
}
server {   #Monitor port 80
    listen 80;
    server_name cp23nk2.sit.kmutt.ac.th capstone23.sit.kmutt.ac.th;  
    return 301 https://$server_name$request_uri;
}
